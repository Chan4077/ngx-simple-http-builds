{"version":3,"file":"ngx-simple-http.js.map","sources":["ng://ngx-simple-http/version.ts","ng://ngx-simple-http/simple-http.service.ts","ng://ngx-simple-http/simple-http.module.ts"],"sourcesContent":["import { Version } from '@angular/core';\n\nexport const VERSION = new Version('1.0.0-294417e-294417e');\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleHttpService {\n  constructor(private http: HttpClient) { }\n  /**\n   * Generates the query parameters to be used for a HTTP DELETE request\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpDelete<P extends any, R extends any>(apiEndpoint: string, apiParams: P, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.delete<R>(\n        apiEndpoint,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.delete<R>(\n        apiEndpoint,\n        {\n          params: params\n        }\n      );\n    }\n  }\n  /**\n   * Generates the query parameters to be used for a HTTP GET request\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpGet<P extends any, R extends any>(apiEndpoint: string, apiParams: P, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.get<R>(\n        apiEndpoint,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.get<R>(\n        apiEndpoint,\n        {\n          params: params\n        }\n      );\n    }\n  }\n  /**\n   * Generates the query parameters to be used with the API endpoint\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiBody The request body\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpPost<\n    B extends any,\n    P extends any,\n    R extends any>(apiEndpoint: string, apiParams: P, apiBody: B = null, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      if (apiBody) {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params,\n            headers: apiHeaders\n          }\n        );\n      } else {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params,\n            headers: apiHeaders\n          }\n        );\n      }\n    } else {\n      if (apiBody) {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params\n          }\n        );\n      } else {\n        return this.http.post<R>(\n          apiEndpoint,\n          {\n            params: params\n          }\n        );\n      }\n    }\n  }\n  /**\n   * Generates the query parameters to be used with the API endpoint\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiBody The request body\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpPut<\n    B extends any,\n    P extends any,\n    R extends any>(\n      apiEndpoint: string,\n      apiParams: P,\n      apiBody: B,\n      apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.put<R>(\n        apiEndpoint,\n        apiBody,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.put<R>(\n        apiEndpoint,\n        apiBody,\n        {\n          params: params\n        }\n      );\n    }\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { SimpleHttpService } from './simple-http.service';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    SimpleHttpService\n  ]\n})\nexport class SimpleHttpModule { }\n"],"names":[],"mappings":"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"}
