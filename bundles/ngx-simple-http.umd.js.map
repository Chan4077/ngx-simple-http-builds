{"version":3,"file":"ngx-simple-http.umd.js.map","sources":["ng://ngx-simple-http/version.ts","ng://ngx-simple-http/simple-http.service.ts","ng://ngx-simple-http/simple-http.module.ts"],"sourcesContent":["import { Version } from '@angular/core';\n\nexport const VERSION = new Version('1.0.0-5ae78fe-5ae78fe');\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SimpleHttpService {\n  constructor(private http: HttpClient) { }\n  /**\n   * Generates the query parameters to be used for a HTTP DELETE request\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpDelete<P extends any, R extends any>(apiEndpoint: string, apiParams: P, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.delete<R>(\n        apiEndpoint,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.delete<R>(\n        apiEndpoint,\n        {\n          params: params\n        }\n      );\n    }\n  }\n  /**\n   * Generates the query parameters to be used for a HTTP GET request\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpGet<P extends any, R extends any>(apiEndpoint: string, apiParams: P, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.get<R>(\n        apiEndpoint,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.get<R>(\n        apiEndpoint,\n        {\n          params: params\n        }\n      );\n    }\n  }\n  /**\n   * Generates the query parameters to be used with the API endpoint\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiBody The request body\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpPost<\n    B extends any,\n    P extends any,\n    R extends any>(apiEndpoint: string, apiParams: P, apiBody: B = null, apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      if (apiBody) {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params,\n            headers: apiHeaders\n          }\n        );\n      } else {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params,\n            headers: apiHeaders\n          }\n        );\n      }\n    } else {\n      if (apiBody) {\n        return this.http.post<R>(\n          apiEndpoint,\n          apiBody,\n          {\n            params: params\n          }\n        );\n      } else {\n        return this.http.post<R>(\n          apiEndpoint,\n          {\n            params: params\n          }\n        );\n      }\n    }\n  }\n  /**\n   * Generates the query parameters to be used with the API endpoint\n   * @param apiEndpoint The API endpoint\n   * @param apiParams Parameters to append to the API endpoint\n   * @param apiBody The request body\n   * @param apiHeaders HTTP headers to append to the request\n   * @return A `HttpClient` instance\n   */\n  createHttpPut<\n    B extends any,\n    P extends any,\n    R extends any>(\n      apiEndpoint: string,\n      apiParams: P,\n      apiBody: B,\n      apiHeaders: HttpHeaders = null): Observable<R> {\n    let params = new HttpParams();\n    for (const prop in apiParams) {\n      if (prop in apiParams && typeof apiParams[prop] !== undefined && apiParams[prop] !== null) {\n        params = params.append(prop, apiParams[prop]);\n      }\n    }\n    if (apiHeaders) {\n      return this.http.put<R>(\n        apiEndpoint,\n        apiBody,\n        {\n          params: params,\n          headers: apiHeaders\n        }\n      );\n    } else {\n      return this.http.put<R>(\n        apiEndpoint,\n        apiBody,\n        {\n          params: params\n        }\n      );\n    }\n  }\n}\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { SimpleHttpService } from './simple-http.service';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  providers: [\n    SimpleHttpService\n  ]\n})\nexport class SimpleHttpModule { }\n"],"names":["Version","HttpParams","Injectable","HttpClient","NgModule","HttpClientModule"],"mappings":"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"}
